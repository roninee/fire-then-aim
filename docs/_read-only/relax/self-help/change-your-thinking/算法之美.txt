最优停止问题——这里有一个限定条件，就是不能回头

秘书问题
在所有最优停止问题中， 最大的难点不在于选择哪一种可选方案， 而是确定自己需要考
虑多少种可选方案。 这些问题往往会引发不同的后果， 不仅陷入爱河的人和需要租房的人必
须慎重考虑， 司机、 房主、 入室行窃者等也常常面临同样的抉择。

“37%法则” [1]源于所谓的“秘书问题”——最优停止问题中最著名的一类难题。

秘书问题是一个近乎完美的数学难题： 问题本身表述简单， 解题难度非常高， 答案简洁
明了， 而影响力又足以让人产生浓厚的兴趣。 

事实
上， 效果最佳的做法是接受所谓的“摸清情况再行动准则”（look-then-leap rule） ： 事先设定
一个“观察”期， 在这段时间里， 无论人选多么优秀， 都不要接受他（也就是说， 你的任务就
是考察目标， 收集数据） 。 “观察”期结束之后， 就进入了“行动”期。 此时， 一旦出现令之前
最优秀申请人相形见绌的人选， 就立即出手， 再也不要犹豫了。


用最理想的方案也会有63%的失败率， 这是一个令人警醒的事实。 在面对秘书问题
时， 即使我们采取了最理想的行动方案， 在大多数情况下也会遭遇失败， 也就是说， 大多数
情况下我们都无法选中所有人选当中最优秀的那名申请人。 对于把爱情视为寻觅“真命天子”的人来说， 这确实是一个坏消息。 

在这种全信息版本的秘书问题中， 选中最优秀申请者的可能性是58%。 这个概率远谈不
上十拿九稳， 但是已经大大优于无信息博弈中根据37%法则得到的37%的成功率。 如果你掌
握了所有信息， 那么即使申请人数非常多， 你多半也会取得成功。


见好就收的时机随时准备停止

经典秘书问题忽略了另外一个需要考虑的因素——时间。
直觉告诉我们， 合理的决策需要穷举所有选择， 逐一权衡， 然后从中找出效果最好的那
个选择。 但是实际上， 在钟表嘀嘀嗒嗒的声音中， 决策活动（或者更具一般性的思维活动）
的其他方面都淡化了， 进一步凸显出停止时机选择的重要性。

02
探索与利用
要最新的还是要最好的？


一些古老的格言承认这种矛盾关系， 但是没有给出应对之策。 “结交新友， 不忘旧友；
新友是银， 旧友是金”“无论生活如何丰富多彩， 仍然留有结交新朋友的空间”等老话说的确
实是真理， 但是它们没有告诉我们， 这些“金”“银”应该以什么样的比例混合， 才可以高质量
地打造出幸福生活这块合金

什么是探索与利用
英语为“explore”（探索） 和“exploit”（利用） 这两个词赋予了截然相反的含义， 但是在
计算机科学家眼中， 它们有很多具体的中性含义。 简单地说， 探索的意思是收集信息， 而利
用则指利用所拥有的信息， 以产生一个好的结果。
凭直觉就知道， 探索在人生中是不可或缺的。 但是， 我们同样应该知道， 如果缺少了利
用， 人生也必然无比惨淡。 根据计算机科学的定义， 很多时候， 利用其实是我们心目中的那
些美妙时光的一个特征。 节假日的家庭聚会就是一种利用。 书迷安静地坐在椅子上， 一边喝
着热腾腾的咖啡， 一边阅读自己心仪的书； 乐队在狂热的歌迷面前演唱自己的畅销金曲； 经
受住岁月考验的夫妇在“属于他们的乐曲”中翩翩起舞。 所有这些， 都是一种利用。


不安分的世界

一般而言， 人们似乎倾向于过度探索——对新鲜事物的青睐程度超过效果最佳的事物。
也许最重要的是， 考虑有最优解的多臂老虎机问题， 不仅可以为我们提供各种算法， 还
可以让我们得到一些深刻的见解。 在经典多臂老虎机问题研究中形成的一些语汇， 诸如探索
与利用的矛盾、 剩余时间的重要性， 0-0选择方案的高价值和最小遗憾值等， 它们不仅可以帮
助我们以全新的方式理解眼前的具体问题， 还可以帮助我们以全新的视角看待整个人类生
活。

探索——孜孜不倦
般而言， 我们对理性的直觉认识常常来源于利用， 而不是探索。 当我们谈论决策过程
时， 我们通常只关注某个决定的即时回报——如果你把每一个决定都当作人生的最后一个决
定， 那么只有利用才是有意义的。 但在一生中， 你会做出很多决定。 实际上， 在做很多决定
时， 理性的做法是强调探索的重要性， 重视新的东西而不是最好的东西， 重视令人为之兴奋的东西， 而不是一味追求安全， 重视随机选择， 而不是深思熟虑的决定。 在人生早期， 更应
该如此。
孩子们的有些想法， 在我们看来是任性， 但是实际上， 可能比我们想象的更明智。

走出探索和利用的两难困境
莉迪娅·戴维斯
我的阅读生涯已经走到了一个十字路口， 有过类似经历的人都熟悉我现在面临的难
题： 在我余下的时光里， 我是应该不停地阅读新书， 还是应该停止这种徒劳的行为（之所
以徒劳， 是因为新书永远读不完） ， 然后重读那些曾经令我无比愉悦的书呢？

卡斯滕森和合作伙伴芭芭拉·弗雷德里克森通过实验验证了这个假设。 他们让人们从直系
亲属、 最近读过的一本书的作者和志趣相投的新交中选择一个人与自己共度30分钟。 结果，年纪大的人往往选择家人， 年轻人则希望与作者接触或者结交新朋友。 但是， 如果对实验做
一个重要的修改， 告诉年轻人他们即将搬到很远的地方， 那么他们也会更愿意与家人待在一
起。 在另一项研究中， 卡斯滕森和同事发现， 同样的结果也发生在老年人身上： 如果让老年
人设想， 由于医学上取得了突破， 他们还可以再活20年， 那么他们的选择就会和年轻人趋
同。 由此可见， 社交偏好的这些差异与年龄本身无关， 而是与人们对决策过程中剩余时间的
认知有关。
计算机科学同样认为， 探索与利用的困境对剩余时间很敏感。 我们通常认为年轻人喜欢
推陈出新， 而老年人的做事方式往往一成不变。 事实上， 两者的行为都与他们各自的剩余时
间高度一致。 把社交网络限制在精心挑选、 对自己最重要的圈子里， 是一种理性的反应， 因
为老年人尽情享受社交成果的时间已经越来越少了。
探索与开发的权衡也告诉我们应该如何看待来自长辈的建议。 如果祖父告诉你哪家餐厅
好， 你应该相信， 因为这些都是几十年搜索活动的结果。 但是， 如果他每天下午5点都会去
同一家餐厅， 你就该毫不犹豫地探索其他选择， 即使那些餐厅有可能更差。
在探索了几十年之后， 如果把晚年生活视为充分利用人生积累的良机， 就可以加深我们
对人生的认识， 我们甚至将发现生活会随着时间的推移而越变越好。 探索者为了获得知识，
付出的代价是心情愉悦。 我们已经知道， 因为意外惊喜有可能带给我们多倍补偿， 所以基廷
斯指数和上限置信区间都夸大了对未知选择方案吸引力的期望值。 但是， 与此同时， 这也意
味着在大多数情况下， 探索必然会让人失望。 把注意力转移到自己喜欢的事情上， 应该可以
提高生活质量， 事实似乎也确实如此。 卡斯滕森发现， 与年轻人相比， 老年人通常对自己的
社交网络更加满意， 认为自己的情感状况更加健康。因此， 傍晚常去的那家餐厅里有很多东西值得老年人期待。 坐在那里， 他们可以品尝毕
生探索带来的成果

03
排序
建立秩序

排序狂潮
排序是计算机的核心内容。 事实上， 从很多方面看， 如果没有排序， 计算机就不会变成
现实。

到20世纪60年代， 一项研究估计， 世界上超过1/4的计算资源被用于排序。 难怪排序对于
处理几乎任何类型的信息来说都是至关重要的。 无论是查找最大值或最小值， 最常见数据或
最罕见数据， 还是清点、 索引、 标记副本， 或者根据你的要求进行查找， 其核心工作通常都
是排序。

排序带来的苦恼
这是排序理论的第一个， 也是最基本的深刻见解： 规模越大， 难度越大。
由此我们可以推断， 在排序的过程中， 最大限度地减少痛苦的办法就是在排序时尽可能
减少排序对象的数量。 


大O符号： 衡量最坏情况的标准
不仅如此， 计算机科学家还希望知道最慢的排序速度。 分析最糟糕的情况， 可以让我们
放心地做出硬性保证——确保关键程序可以及时完成， 确保不会超出最后期限。 因此， 在本
章剩余部分（事实上， 是全书的剩余部分） 里， 除非另有说明， 否则我们讨论的都是算法的
最差表现。
计算机科学有一种专门用来测量算法最坏情况的速记法， 即所谓的“大O”符号。 大O符号有一个非常奇怪的特点——设计这个符号的目的就是用来表示不精确性。 也就是说， 大O
符号的目的不是使用分钟和秒钟来表示算法的性能， 而是方便我们讨论问题规模和程序运行
时间之间的关系。 由于大O符号故意剔除了细枝末节的内容， 所以展示在我们眼前的是将问
题分成不同大类的概略情况

平方时间： 冒泡排序与插入排序
2007年， 时任参议员的奥巴马访问谷歌公司时， 谷歌的首席执行官埃里克·施密特开了一
个玩笑， 以求职面试官的口气问了奥巴马一个问题： “为100万个32位整数排序， 最好采用什
么方法？ ”奥巴马诙谐一笑， 回答道： “我认为用冒泡排序肯定是不对的。 ”谷歌的工程师们
爆发出一阵欢呼。 一位工程师后来回忆道： “他竟然知道冒泡排序， 我一下子就被打动了。 ”

打破平方时间的魔咒： 分治算法
看到两个完全合理的方法都会导致平方时间之后， 我们不禁要问： 真的有更快的排序方
法吗？

在家庭内部处理小规模排序问题时， 合并排序也能找到合适的舞台。 它之所以应用广
泛， 原因之一是它非常适合并行处理。 如果你还在苦苦思索对付那个书架的办法， 合并排序策略就会建议你订一个比萨， 然后邀请几个朋友来分享。 把书平均分配， 并让每个人负责整
理其中一堆。 接着， 让朋友们两两配对， 把他们负责的书合并到一起。 重复这个过程， 直到
最后剩下两堆书， 再一次性地合并到书架上。 需要注意的是， 不要让比萨弄脏了那些书。

超越比较法： 比对数更好的算法
桶排序算法
伯克利分校化学专业的学生乔丹·何是一位图书分类排序高手。 他一边整理着PS3000-
PS9999书架上的一大堆图书， 一边告诉我们：
据我的经验， 书目号在3500至3600之间的书很多， 因此我首先找3500以下的书， 先粗
排， 再细排。 等3500以下的书都排好之后， 我知道3500以上的书（也就是3500至3599这些
书） 是个大头， 所以我想把这些书单独排好序。 如果这些书的数量太多， 我可能会进一步细
分， 分成3510-3519、 3520-3529、 3530-3539等。
乔丹总是把25本左右的书编成一组， 全部排好序之后， 装到小车上。 排序的时候， 他使
用的确实是插入排序法。 他精心想出来的办法是一种桶排序法。 他事先就知道各种书目号对
应的图书数量， 因此他清楚应该如何选桶。 结果， 这个办法取得了非常好的效果。

排序是搜索的准备工作
但是， 如果你邀请计算机科学家帮助你完成这项工作， 他们询问的第一个问题应该是：
你到底为什么要整理这些图书？
老师经常告诉那些本科生， 计算机科学研究的就是如何取舍的问题。 
混乱无序也无伤大雅！
如果你从来不在某些物品中搜索某个目标， 那么为这些物品排序就纯粹是一种浪费。 如
果你从来不为某些物品排序， 那么你在其中搜索的效率就会很低

结论很明确： 整理书架与在书架上浏览一遍相比， 前者需要更多的时间和精力。
你可能不会每天都关注乱七八糟的书架， 但是电子邮件的收件箱绝对是搜索轻松击败排
序的另一个舞台。 人工将电子信息归档到文件夹中所花费的时间与在现实世界中纸质文件归
档所需的时间差不多， 但是电子邮件的搜索速度要比纸质邮件高得多。 随着搜索成本的下
降， 排序的价值也会随之降低。

其研究结果发表在一篇名
为“我整理电子邮件是一种浪费时间的行为吗？ ”的文章中。 我在这里来个剧透吧： 结论不仅
是肯定， 而且是非常肯定。 惠塔克指出： “这是一种经验， 同时也是一种体验。 在采访中谈
论这些邮件整理问题时， 他们告诉我， 他们通常会讨论这个问题， 并且认为这件事浪费了他
们大量时间。
计算机科学表明， 混乱的危害和秩序的危害是可以量化的， 他们的成本都可以用时间这
个“货币”来衡量。 杂乱无序可能会被认为是一种拖延的行为——把责任推给未来的自己， 而
且还要连本带息偿还我们不愿意提前支付的债务。 但是， 详细情况还要更加微妙。 有时， 混
乱不仅仅是轻松的选择， 还是一个最优选择。


排序与体育
搜索与排序的取舍问题表明混乱状况有时反而更加有效。 不过， 节省时间不是排序的唯
一原因， 有时秩序本身就是我们追求的目标。 最清楚这一点的非运动场莫属。

道奇森针对的是单一淘汰赛。 在这种赛制下， 运动员两两对决， 只要输掉一场比赛， 就
会被淘汰出局。 道奇森的理由非常有说服力， 他认为， 货真价实的第二名有可能是被第一名
淘汰的任何人， 而不一定是最后才被淘汰的那名运动员。 具有讽刺意味的是， 奥运会设立有
铜牌争夺赛， 这个规定似乎表明我们知道单一淘汰模式无法确定第三名。 [1]但是， 这种赛制
其实同样不足以确定第二名的归属， 实际上， 它只能准确地判断出谁是第一名。 正如道奇森
所说： “利用现行办法确定的名次， 除了第一名， 其他的都毫无意义。 ”直白地说， 银牌是一
种假象

发牢骚的权利： 噪声与健壮性
杀戮排序： 啄食顺序与优势等级

这时候， 如果一个超级玩家坐到其
中一张桌子上， 会怎么样呢？ 如果原先坐在那里的那位玩家不愿下赌注， 他们就都会离开那张桌子。
克里斯托弗·诺依曼说： “假设有两只猴子。 一只猴子坐在那里， 正在慢条斯理地吃东
西。 这时候， 另一只猴子走了过来， 来到第一只猴子的旁边。 通常， 第一只猴子就会站起
来， 离开那里。

创立啄食顺序， 可以从根本上解决一个重要的计算问题。 顺便说一句， 农场为鸡去喙以
免彼此争斗的做法可能是出于好意， 但是效果往往适得其反， 因为它剥夺了个体为秩序而战
的权利， 这会大大增加了整个鸡群执行排序程序的难度。 结果， 在许多情况下， 鸡群内部的
对抗不减反增。

说到动物对当前秩序的了解程度， 我们可能需要寄希望于它们的推理与记忆能力。 只有
提高这些能力， 才会减少对抗。 或许人类与最高效排序的距离最近。 在说到扑克游戏时， 哈
克斯顿说： “我算不上是世界一流的单挑无限注德州扑克游戏玩家。 我心中有一个非常具体
的前20名优秀玩家排名表， 我想他们心中也有类似的名单。 我觉得， 大家对这样一个名单的
意见高度一致。 ”只有排名有分歧时， 才会有现金游戏

以竞争取代争斗
至此， 我们已经知道了群体为成员排序造成的两个不利结果。 

例如， 有一项体育赛事仅利用一场比赛的时间， 就将几万选手全部排好了次序。 （反过
来， 一场有1万名运动员参加的循环赛， 需要安排1000万场对决。 ） 唯一需要注意的是， 赛
事所需的时间是由最慢的选手决定的。 这项体育赛事就是马拉松比赛， 它给了我们一个重要
提示： 竞争与争斗在本质上是不同的。

04
缓存__最近最少使用
忘了它吧

衣橱整理与计算机存储器管理所面临的问题非常相似： 空间有限， 而目标是节省金钱和
时间。 自计算机问世以来， 计算机科学家就开始苦苦思索哪些东西需要保存以及如何保存这
两个孪生问题。 通过这几十年的努力， 人们发现， 玛莎·斯图尔特关于哪些东西应该抛弃的4
句话建议， 其实是几个彼此不同的、 不完全兼容的推荐意见， 其中一个意见尤为重要。
研究存储器管理的计算机科学同样可以告诉我们应该如何安排壁橱（以及办公室） 的空间。 乍一看， 计算机似乎遵循了玛莎·斯图尔特的格言——“物以类聚”。 操作系统鼓励我们把
文件根据类别放到一级一级的文件夹里， 随着文件夹体系越分越细， 其中的内容也越来越具
体。 但是， 就像学者思想上的混乱被书桌表面的整洁性所掩盖一样， 在计算机嵌套文件夹的
遮掩下， 数据分类方法高度工程化的混乱特点也因为计算机文件系统表面上的整洁性而变得
模糊起来


为了避免一头撞上这堵墙， 计算机科学至今为止采取的最有效措施就是缓存、 缓存的缓
存以及缓存的缓存的缓存， 如此而已。 现代消费者购买的笔记本电脑、 平板电脑和智能手机
都有一个6层的分级存储器体系。 今天， 存储器的智能管理对计算机科学的重要性已经达到
了史无前例的高度。
一提到缓存（或者具有类似功能的壁橱） ， 我们大脑中闪现的第一个问题就是： 如果它
们装满了东西， 我们该怎么办？ 下面， 我们就从这个问题开始谈起

我们可以尝试随机清理算法， 将新数据添加到缓存中， 并随机覆盖旧数据。 随机清理是
早期高速缓存理论得出的一个令人吃惊的结果， 虽然远非完美， 但是效果也还不错。 这也可
能是一种巧合， 因为只要有一个缓存， 无论你如何维护， 都可以提升系统的效率。 不管怎么
说， 你经常使用的内容通常还会很快回到缓存中。 另一种简单的策略叫作先进先出
（ FIFO） 。 这种算法总是清理或覆盖在缓存中保存时间最久的内容（与玛莎·斯图尔特问
的“我已拥有它多长时间了”这个问题有异曲同工之妙） 。 第三种方法是最近最少使用
（ LRU） ， 即将闲置不用时间最长的内容清理掉（与之相对应的斯图尔特的问题是“上次穿它
或使用它是什么时候的事”） 。
事实证明， 斯图尔特强调的这两点暗示了两种截然不同的策略， 而且她的一条建议显然
比另一条更有效果。 贝莱迪在若干情形下对随机清理、 先进先出和最近最少使用的几个变体
进行了比较， 结果发现最近最少使用法始终表现出最接近未卜先知的效果。 最近最少使用法
的高效性得益于计算机科学家所谓的“时间局部性”： 如果一个程序曾经调用过某个信息， 那
么在不久的将来它可能会再次调用这个信息。 计算机解决问题的方式（例如， 执行一个循
环， 使一系列相关的读和写可以快速完成） 是造成时间局部性的一个原因， 而人解决问题的
方式是另外一个原因。 在使用电脑时， 你可能会在电子邮件、 网页浏览器和文字处理器之间
来回切换。 你最近访问过这些程序的这个事实就是一个线索， 表明你可能会再次访问该程
序。 在同等条件下， 如果某个程序处于闲置状态的时间较长， 就表明你在未来一段时间内应
该也不会调用该程序。

例子：图书馆

这些问题之间的高度相似性意味着我们可以有意识地将计算机科学的解决方案应用到家
庭生活中。
首先， 当你决定物品该扔还是该留时， 最近最少使用原则可能是一个有效的指导原则，
其效果比先进先出原则好得多。 如果你现在还不时穿一穿上大学穿的T恤， 那就没有必要把
它扔掉。 但是， 你好久没穿过的那条格子裤该如何处理？ 还是把它送到旧货店吧。
其次， 合理利用地理位置。 尽可能把物品的“缓存”建立在它们通常使用的位置附近。 在
大多数家居指南中， 这并不是一个具体的建议， 但是根据人们的亲身体会， 这个策略的效果
非常好。 比如， 在朱莉·摩根斯特恩的《组织管理探秘》 一书中， 有人说道： “我把跑步和锻
炼用的服装放在前衣帽间里的一个柳条箱里， 这里距离前门比较近。

最后一个深刻认识是关于多层次分级存储器体系的。 目前， 人们还没有把它变成壁橱管
理的指导意见。 拥有缓存可以取得一定的效果， 但是建立多个缓存级别， 包括从体积最小、
速度最快的到体积最大、 速度最慢的各种缓存， 可能会有更好的效果。 从你的所属物品这个
角度看， 你的衣柜是一级缓冲， 地下室是另一级， 而自助存储柜是第三个。 （当然， 存储速
度依次降低， 因此你应该根据最近最少使用原则， 决定把哪些物品清理到下一级。 ） 但是，
你也可以再添加一级缓存以加快存储速度： 一个比壁橱体积更小、 速度更快、 距离更近的缓
存。
汤姆的妻子在其他方面都非常宽容， 但是她坚决反对把衣服堆在床边的做法， 尽管汤姆
坚持认为这实际上是一种高效的缓存方案。 幸运的是， 我们与计算机科学家的对话也帮助他
找到了这个问题的解决方法。 加州大学圣迭戈分校的瑞克·贝纳斯的研究方向是从认知角度研
究搜索引擎， 他建议在床边放一个衣物架。 虽然衣物架现在已经不多见了， 但是它在本质上
就是一个一件套壁橱， 可以挂夹克、 领带和裤子的复合衣架， 是你的家庭缓存必备的完美物
件。 这个例子表明， 计算机科学家不仅可以节省你的时间， 还可以挽救你的婚姻。

野口明确指出， 无论旧文件还是新文件， 都必须遵循左侧插入规则。 每次取出一个文
件， 在使用后放回时都必须把它插到盒子里最左边的那个位置。 寻找文件时， 也总是要从最
左侧开始查找。 因此， 最近使用过的文件很快就能找到。
野口解释道， 因为把每一个用过的文件放到左边， 比在原来的地方重新插入文件要简单
得多， 所以久而久之， 就形成了这种习惯。 后来他才逐渐意识到这个方法不仅简单， 而且效
率惊人。


斯雷特和陶尔扬的研究结果告诉我们， 如果将野口文件归档系统翻转90度， 就可以实现
一个新的变化。 很简单， 一盒文件夹就成了一堆文件夹。 如果你搜索的是成堆的文件夹， 那
么搜索顺序自然是从上至下， 而且每次你把一个文件放回去的时候， 你都不会把它放回到原
来的位置， 而是放到最上面

简而言之， 自组织列表的数学计算会为我们提供一些激进的建议： 你根本没有必要因为
案头文件成堆而自责， 因为这不是杂乱无序的标志， 而是最精心设计和最有效的组织形式之
一。 在别人看来， 这是一种没有组织的混乱局面， 但是实际上， 它是一个自组织混乱。 把东
西扔回成堆物品的顶部， 是你在无法预测未来时可以采取的最有效的做法。 在前一章中， 我
们发现， 在某些情况下， 花时间排序之后， 效率不升反降。 这里， 我们同样建议， 在某些情
况下不需要考虑如何管理的问题， 不过理由有所不同： 因为你其实已经组织得很好了。

遗忘曲线

经验暴政
卡利马科斯
一本大部头的书就是一个大麻烦。
史蒂夫·赖特
为什么不用造黑匣子的材料制造整架飞机呢？

05
时间调度理论
要事先行

安妮·迪拉德
我们度过每一天的方式， 自然就是度过一生的方式。
尤金·劳勒
“ 我们为什么不写一本关于时间调度理论的书呢？ ” 我问， “ 不应该花太多时
间！ ” 写作， 就像发动战争， 其中常常包含严重的计算错误。 15年后， 其中的日程安排仍
然未执行完。

些任务时间紧迫， 但没那么重
要。 有些很重要， 但并没那么紧迫。 你也许会想起亚里士多德的这句话——“重复的行为造
就了我们”， 这种行为可能是拖地、 与家人共度更多时光、 准时发传真， 或者学法语。

以， 我们该怎么做， 什么时候做， 以什么样的先后顺序做？ 人生就是在等待中度过。
虽然我们总能找到一些方式安排我们每天要做的事情， 然而我们似乎并不认为我们善于
安排这些事情。 因此， 时间管理指南之类的书常年位居畅销书榜的前列。 不幸的是， 我们往
往能发现这些指南之间的矛盾和不一致之处。 《尽管去做》 一书中提倡的是， 一想到任何可
以在两分钟内完成的任务就立即去做。 另一本同类畅销书《吃掉那只青蛙！ 》 建议从最困难
的任务开始， 再逐步转向更容易的事情。 《战胜拖延》 一书则建议首先执行调度者的社交活
动和休闲活动， 然后再将工作填充到空白时间之中， 而不是我们经常做的相反的顺序。 “美
国心理学之父”威廉·詹姆斯曾断言， “没有什么比永远有一个未完成的任务悬在那里更让人感
到疲惫不堪的”， 但弗兰克·帕特诺伊在《等待》 中提到一些故意不立即完成任务的例子。
每位大师都有其独特的思想体系， 我们很难知道该听谁的

安排时间是一门科学

泰勒创建了一个规划办公室， 它的中心是一个公告板， 展示了商店的日程安排， 以便所
有人都能看到。 ————就是甘特图
泰勒和甘特将调度变成一种研究对象， 他们赋予它视觉和概念的形式。 但他们并没有解
决一个基本问题， 那就是， 到底怎样安排日程是最好的。 直到几十年之后的1954年， 兰德公
司的数学家塞尔默·约翰逊在他发表的一篇论文里才第一个暗示这一问题可以被解决。

与装订或洗衣过程不同， 我们将重点研究这其中的一小部分： 单一机器调度。 因为最重
要的时间调度问题只涉及一台机器： 我们自己。

处理时限
一提到单机调度， 我们立马会遇到一些问题。 约翰逊的装订调度是基于最小化两机共同
工作时间来降低总时间的。 然而， 在单机调度的情况下， 如果我们要完成所有被赋予的任
务， 那么所有的安排都应该用同样长的时间去完成， 这与先后顺序无关。
这一点最基本且违反直觉， 值得重复应用。 如果你只有一台机器， 同时你必须完成所有
的任务， 那么对于任务的任何排序都将花费相同的时间。

因此， 甚至在开始之前， 我们就会遇到单机调度的第一堂课： 明确你的目标。 我们只有
知道如何保持得分时才能宣布哪种安排更好。 这是计算机科学中的一个主题： 在你有一个计
划之前， 必须首先选择一个衡量指标。 而事实上， 我们最终挑选的这个指标将直接影响哪种
安排方法的实施效果最好

如果你要降低最大延迟时间， 那么最佳策略就是你先从截止日期最近的任务开始， 再以
此类推逐渐执行。 这一策略被直观地称为最早到期日原则。 
你可能已经使用最早到期日原则来统筹你的工作， 在这种情况下， 不需要计算机科学来
证明这是个明智的策略。 但你可能不知道， 这就是最优策略。 更确切地说， 它假设你对一种
衡量标准尤其感兴趣， 即要减少你的最大延迟。 但是， 如果这不是你的目标， 另一种策略可能就会更适合。

把事情做好
老子
千里之行， 始于足下。

有时， 最后期限并不是我们主要的考虑因素， 我们只是想要把事情都做好： 在尽可能少
的时间里完成尽可能多的事情。 这就使这一看似简单的要求很难转化成具体的统筹指标。

将完成时间总和最小化可以引申出一个非常简单的优化算法——最短加工时间： 总是先
做能最快完成的任务

（因此， 最短加工时间法推荐你先做任何耗时不到两分钟的任务。 ） 当然， 这没有办法
改变你的工作总量， 但最短加工时间法可以尽快减少未完成的任务数， 从而抚慰你的心灵。

当然， 所有未完成的项目并不都是平等的。 扑灭厨房里的火肯定比用邮件熄灭顾客的怒
火更重要， 虽然前者可能耗费的时间更长。 

针对这一目标的最优策略是对最短加工时间法的一种完善： 将每个任务的权值通过其需
要的完成时间进行划分， 然后将单位时间重要性（如果你喜欢的话可以称之为“密度”， 延续
权值的隐喻） 结果从高到低排序。 虽然可能很难将日常工作的每一个任务都赋予一定的重要
性， 但这一策略仍然提供了很好的经验法则： 只需优先完成那些可能需要双倍完成时间且具
有双倍重要性的任务。

找出问题所在
这将涉及我们之前所讨论的单机调度问题。 有人说： “戴一只手表的人知道时间， 而戴
两只手表的人就不能确定时间了。 ”计算机科学能给我们提供用单机调度执行的运用不同度
量标准的最优算法， 但选择哪种度量标准就取决于你自己了。 在很多事情中， 我们都得决定
到底想解决什么问题。

计算机上工作会带来额外的危险， 当我们想到并仔细思考我们的调度标准时： 用户界
面可能会微妙（或不那么微妙） 地将自己的度量使用在我们身上。 例如， 一个现代智能手机用户， 已经习惯于看到“未读消息标签”徘徊在应用程序图标之上， 令人恐慌的红白数字就是
每个特定的应用程序在告诉我们希望我们完成多少任务。 如果它是电子邮件收件箱中的未读
邮件， 那所有的消息都在无形中被赋予相同的权重。 我们是否应该运用最短处理时间算法
——先处理最简单的电子邮件， 再处理更难的， 以尽快减少未读邮件的数量呢？

重点不只是要把事情做好， 更重要的是把权值更高的事情做好——在每一个时刻都做好
最重要的工作， 这听起来像是治愈拖延症的一个行之有效的方法。 但事实证明， 仅仅这样还
不够。 一组计算机调度专家将以一种最戏剧化的方式来感受这一点： 在火星表面， 全世界的
人都在注视着他们。

 他们穿越太
阳系发射的解决方案是什么呢？ 那就是优先级继承。 如果发现低优先级任务阻塞高优先级资
源， 那么所有低优先级任务应该立刻变成系统上的最高优先级任务， “继承”被阻塞的优先
级

这其中值得一提是， 想把事情做好的热情不足以避免调度上的陷阱， 光有想把重要事情
做好的热情也不够。 要承诺坚持做你所能做的最重要的事情， 如果你一直目光短浅而不远望
前方， 那么你眼中的整个世界都仿佛处于拖延之中。 正如汽车轮胎的旋转一样， 只有当你的
轮子被卡住时你才会渴望它立即开始运转。 歌德曾说： “最重要的事情永远不应该受到不重
要事情的影响。 ”虽然这有一定的道理， 但它也不都是真的。 有时候， 最重要的事要等不重
要的事情完成之后才能进行， 所以这里只有将这些不重要的事情看得跟被阻塞的重要任务一
样重要。

当某个任务在另一个任务完成之前无法启动时， 调度理论家称之为“优先约束”。

对调度理论边界的绘制一直持续到今天。 最近的一项调查表明， 在所有问题中大约有7%
是仍然未知的， 就是调度的未知领域。 然而， 在我们所理解的93%的问题中， 现实也并不是
很理想： 只有9%的问题可以被有效解决， 其他的84%已经被证明是难解的。 [2]换句话说，
大多数的调度问题都没有现成的解决方案。 如果你觉得很难完美地管理你的日程， 那也许因
为实际上这就是难以管理的。 尽管如此， 我们讨论过的算法往往是解决那些困难问题的起点
——也许不是那么完美的， 但至少是可以预期的。

事实证明， 即使你不知道什么时候会开始工作， 最早到期日和最短加工时间仍然是最佳
的策略， 这能够保证你在面对不确定性时表现出最佳状态（平均来说） 。 

相比之
下， 驻足思考， 工作来时反应灵敏， 也许不能给你想象中完美的调度执行， 但这是你可以做
的最好的一件事， 也最容易计算。 这会带来一些安慰。 作为商业作家和编码员的杰森·弗瑞德
曾说： “直到做出一个万能计划， 你才会继续吗？ 用‘猜测’代替‘计划’， 并放轻松。 ”当未来充
满迷雾的时候， 原来你不需要日程表， 只需要一个待办事项清单。

抢占并不是随意的： 关联转换
谚语
走的越急， 就落得越远。
埃伦·厄尔曼
程序员不说话， 因为他们不能被打断……与其他人同步（电话、 蜂鸣器和门铃） 只能
意味着打断思路。 中断就意味着会发生一些错误。 你不能中途下车。

就个人而言， 我们已经发现， 编程和写作需要考虑整个系统的状态， 所以其进行切换的
成本就非常大。 

06
贝叶斯法则
预测未来

伯特兰·罗素
人类获得的所有知识都是不确定的、 不准确的和不全面的。
安妮
明天太阳会照常升起。 你可以用你的一切来打赌太阳会出来。

大卫·休谟
因此， 如果我们相信过去的经验， 并把它作为我们判断未来的标准， 那这些标准就一
定不是确定的。


哥白尼法则
如果你遇到一个90岁的男子， 哥白尼原则预测他会活到180岁。 同时， 每个6岁的男孩
都会被预测将在12岁时早逝。
要理解为什么哥白尼原则是合理的， 以及为什么它有时不合理， 我们需要回归到贝叶斯
法则。 因为， 哥白尼原则尽管具有明显的简单性， 但其的确是贝叶斯法则的一个实例。

在认识到哥白尼原则是无信息先验基础上的贝叶斯法则之后， 就可以回答很多关于其有
效性的问题。 哥白尼原则在我们什么都不知道的情况下似乎是合理的、 准确的， 如在1969年
看到的柏林墙， 我们不确定什么时间范畴是合适的。 同时， 在我们对某一对象的确有所了解
时， 就会感觉这是完全错误的。 预测一个90岁的人能活到180岁是不合理的， 这恰恰是因为
我们关于人类寿命已经了解了很多——在这种情况下， 我们就可以预测得更好。 我们给贝叶
斯法则带来的先验信息越丰富， 我们便能从中得到越有用的预测。

真实世界的先验……
从广义上讲， 世界上有两种类型的事物： 倾向于（或围绕） 某种“自然”价值的事物， 以
及与之相反的事物。
人类的生命跨度显然是属于前一类。 它大体遵循所谓的“正态”的分布， 也被称为“高
斯”分布

世界上有许多事物看起来似乎并不呈现正态分布， 但这只是因为你没有长远地看。 例
如， 美国一个城镇的平均人口是8226人。 但是如果你要按人口统计该城镇数量图表， 你就不
会看到像钟形曲线那样长远才能实现的东西。 还有很多小镇的人口远不足8226人， 同时， 某
些重要城镇的人口会比平均人口要大得多。 这种模式就是所谓的“幂律分布”， 也被称为“无
标度分布”， 因为他们可以在多个尺度的范围表达数量： 一个城市能有几十， 数百， 数千，
数万， 数十万， 甚至数百万名的居民， 所以我们不能以一个单一的数值来定义一个“正常”的
城镇有多大

幂律分布可以描述在日常生活中一系列与城镇人口分布类似的现象： 大多数都低于平均
值， 少数是超过的。 电影的票房收入， 其范围可以是从4~10位的数字， 这是另一个例子。 有
些电影根本挣不了那么多钱， 但偶尔也有像《泰坦尼克号》 这样的高票房电影。
事实上， 一般来说， 货币是一个充满权力法则的领域。 幂律分布可以描述人民的财富和
人民的收入。 例如， 美国的人均收入是55688美元， 但由于收入大致是呈幂律分布的， 这样
我们便会得知， 平均值以下的人会比平均值以上的要多， 而平均值以上的人的收入可能高得
几乎偏离了图表。 事实也的确如此： 美国2/3的人口收入低于平均收入， 但前1%的人的收入
几乎是平均水平的10倍。 这1%中的前1%的人的收入又是其余99%的10倍。

人们常常感叹“富人会变得更富有”， 实际上“偏好依附”的过程是产生幂律分布的最可靠
的方法之一。

贝叶斯法则告诉我们， 在基于有限的证据进行预测时， 很少有事情是和好的先验一样重
要的， 也就是说， 我们期望证据可以从分布结果中得出。 因此， 良好的预测最开始要有良好
的直觉， 要能感觉到我们何时在处理一个正态分布， 何时在处理一个幂律分布。 事实证明，
贝叶斯法则为我们处理这些情况各提供了一个简单但显著不同的预测经验法则。

对于任何幂律分布， 贝叶斯法则表明，
一个合适的预测策略就是相乘法则： 将迄今观察到的数量乘以一些常数。 对于无信息先验，
这个常数一般是2， 哥白尼预测的方法由此得来； 在其他幂律的情况下， 所乘的数将取决于
你工作的精确分布。 例如， 对于电影票房， 它正好是1.4。 所以， 如果你听到一部电影到目前
为止已经赚了600万美元， 那么你可以猜测， 它总共将赚840万美元。 如果它现在赚了9000万
美元， 那么可以预计的最高票房将是1.26亿美元
在这两个极端之间， 生活中实际上还有第三种事物： 那些不具有更大或更小可能性结束
的事物， 只因为他们已经持续存在了一段时间。 
厄兰分布给出了第三种预测法则——相加法则： 总是预测事物只会再持续一个常量。
这三个非常不同的最佳预测模式——相乘法则、 平均法则和相加法则都是通过将贝叶斯
法则应用到幂律、 正态和厄兰分布上得出结果的。 因为这些预测的出现， 这三种分布也给我
们提供了不同的指导， 让我们知道对某些事件应该有多惊讶
小数据与思维
三个预测法则——相乘、 平均和相加适用于日常生活的各个方面。 在这种情况下， 人们
一般都非常善于使用正确的预测法则。 

07
过度拟合
不要想太多
但事实上， 如果每一次预测都要顾全双
方， 那么就会产生一些难以避免的矛盾关系

 从根本上
说， 过度拟合就是对数据的一种偶像崇拜， 产生的原因是将重心放在我们能够测量的数据而
不是真正重要的问题上

我们所拥有的数据和我们想要的预测之间的差距几乎无处不在。 当做出重大决定时， 我
们只能通过考虑现在对我们重要的因素来猜测什么会让我们稍后更愉悦。 

因此， 考虑越来越多的因素和在模型分析上花费的更多努力， 会导致我们进入将错误的
事物最优化的误区。 正如上文提到的， 向青铜蛇而不是其身后蕴含的更大力量祈祷

过度拟合无处不在
一旦你了解了过度拟合， 你就会发现它随处可见。

如果你不能简单地解释一个问题， 那你就没有完全理解它。

从统计的观点来看， 过度拟合是我们对看到的实际数据太过敏感的体现。 那么， 解决方
案也是直截了当的： 我们必须平衡我们的愿望， 找到我们应该使用的对抗复杂性的模型进行
分析。
在几个相互竞争的模型中选择一种方法就是奥卡姆的剃刀原理， 它表明， 所有的事情都
是平等的， 最简单的假设可能就是最正确的那个。 


苏联数学家安德烈·季霍诺夫给出了一种答案： 引入一个额外项来计算惩罚更复杂的
解决方案。 如果我们引入复杂性惩罚， 那么更复杂的模型需要做的不仅是做得更好， 更重要
的是解释数据以证明其更大复杂性的合理性。 计算机科学家将这个原则——使用约束来惩罚
模型的复杂性， 称为正则化

在各种机器学习任务中， 正则化的有效性表明， 我们可以通过有意识地思考和少做一些
事情来做出更好的决定。 如果我们最先想到的因素可能是最重要的因素， 那么如果思考的量
超过某一个度的话， 就不仅是浪费时间和努力， 它将会让我们找到更糟糕的解决方案。 早期
停止为理性的论证而不是一味地推理提供了基础。 但是把它变成实用的建议还需要回答一个
问题： 我们什么时候应该停止思考

人类进化中的过度拟合
《 疾病与新食物摄入前的关联》
一只活着的老鼠所吃过的每一样食物， 都一定没有杀死它。


何时应该想得更少？
如果你了解了所有的事实， 它们就不会有任何错误和不确定性， 你可以直
接评估什么对你来说是重要的， 然后不要过早的停止。 思考的时间长而努力： 模型的复杂性
和付出的努力都是值得的。

但事实并非如此。 如果你有很高的不确定性和有限的数据， 那么务必提前停止。 如果你
不清楚你的工作将如何被评估， 以及由谁来评估， 那么你就不值得花额外的时间来对你自己
（或者其他人） 的特质做出所谓完美的判断。 不确定性越大， 你所能衡量的东西和真正重要
的东西之间的差距就越大， 你就越应该注意过度拟合的风险， 也就是说， 你越喜欢简单， 就
应该越早停下来。
当你真正处于黑暗中， 最好的计划将是最简单的。 当我们对预期不确定， 而且得到的数
据杂乱无章时， 最好的办法就是用一支粗的画笔来画画， 用宽大的笔触来思考。 有时候， 照
字面意思来处理就行。 正如企业家杰森·弗里德和戴维·H.汉森解释的那样， 在他们需要头脑
风暴的时候， 他们就会用越粗的笔（这是一种用来表达简单化的聪明的方式） ：

08
松弛
顺其自然

就连普林斯顿实验室的总计算能力都无法找到完美的座位分配计划， 这一点似乎令人十
分惊讶。 在我们讨论过的大多数领域中， 直接的算法可以保证最佳的解决方案。 但是， 正如
计算机科学家在过去几十年里所发现的那样， 无论我们的计算机处理速度有多快， 我们如何
巧妙地对它们进行编程， 一个问题的完美解决方案都是不存在的。 事实上， 没有人能像计算
机科学家那样理解， 在面对看似无法控制的挑战时， 你既不应该永远辛苦工作， 也不应该放
弃， 但我们将会看到第三种尝试。

最优化的难度

放松吧
伏尔泰
完美就是遇到优秀的敌人。

当别人告诉你要放松的时候， 可能是因为你紧张， 对要做的事情过于在意。 当计算机科
学家们面对一项艰巨的挑战时， 他们的头脑也想放松， 他们会传阅《放松方法或分散放松技
巧介绍》 （An Introduction to Relaxation Methods or Discrete Relaxation Techniques） 是两本书。 但
是他们不会放松自己， 他们只能会放松问题本身。

在计算机科学中最简单的放松形式之一就是约束松弛。 

松弛不能为你提供完美答案的捷径。 但是计算机科学也可以量化松弛在时间和解决方案
质量之间产生的比例权重。 在很多情况下， 这个比例是戏剧性的、 没有头脑的， 例如， 一个
答案跟一个1×10-15的完美答案相比， 至少有一半好。 这个道理简单而深刻： 如果我们愿意
接受足够接近的解决方案， 那么即使是一些最严重的问题也可以用正确的技术来解决。


无数灰色地带： 持续的松弛
旅行推销员问题， 就像梅根·贝洛斯寻找最佳座位安排的问题一样， 是一种特殊的最优化
问题， 称为“离散优化”， 即在解决方案中没有平滑的连续统一体。 推销员要么到这个镇子，
要么到那个镇， 你要么在5号桌， 要么在6号桌。 两者之间没有灰色地带。

持续松弛并不是一颗神奇的子弹： 它仍然没有给我们提供有效的方法以得到真正的最佳
答案， 只能得出它们的近似值。 但是， 提供最佳邮寄或接种方案的两倍选择仍远比未优化的
选择要好

有一天， 当布莱恩还是个孩子的时候， 他向他母亲抱怨他必须做的事情： 他的家庭作
业、 他的家务……“从技术上讲， 你做任何事情都不是必需的， ”他的母亲回答道， “你不必
按照老师说的去做。 你不必按我说的去做。 你甚至不必遵守法律。 所有事情都会产生后果，
你要想好你是否愿意承担这些后果。 ”
布莱恩的童心被打击了。 这是一种强有力的信息， 是一种意识、 责任、 道德判断的觉
醒。 这也是另一种东西： 一种强大的计算技术， 被称为拉格朗日松弛算法。 拉格朗日松弛算
法背后的理念很简单。 优化问题有两个部分： 规则和计分。 在拉格朗日松弛法中， 我们采用
一些问题的约束并将它们放入计分系统中。 也就是说， 我们采用那些看似不可能的方法， 然
后将其降级为高昂代价。 


学会松弛
在计算问题展现给我们的各种方式中， 优化问题（一部分是目标， 一部分是规则） 仍可
以说是最常见的。 而离散优化问题， 我们的选择是二选一， 没有中间地带， 这是最典型的选
择。 在这里， 计算机科学做出了一个令人沮丧的结论。 许多离散优化问题确实很难。 该领域
最杰出的人物都想不出一个得到完美答案的方法， 而他们实际上是更致力于证明不存在这样
的方法， 而不是寻找方法

有很多方法可以对一个问题进行松弛， 我们已经看到了三个最重要的问题。 首先， 约束
松弛， 简单地消除一些约束， 在回到现实之前， 先在更宽松的问题上取得进展。 第二， 持续
松弛， 将离散的或二进制的选择变成连续体： 当决定是选冰红茶还是柠檬水时， 先想象一个
50： 50的“阿诺德·帕尔默”混合， 然后再向上或向下延展。 第三， 拉格朗日松弛， 把不可能的
变成仅仅是惩罚， 要学会扭曲规则的艺术（或打破规则， 并接受后果） 。


每当我们遇到一个故障时（除非我们愿意花无数时间去追求完美） ， 难题就会要求我们
不许躲避， 想象更简单的版本， 并首先解决这些问题。 当应用正确时， 这不仅是一种个人想
法， 也不是幻想或白日梦。 这是我们取得进步的最好方法之一。


09
随机性
何时应用随机？

10
网络
我们如何联系？

11
博弈论
别人的想法

11
博弈论
别人的想法

“在扑克游戏中， 你从不会玩你自己手里的牌， ”詹姆斯·邦德在《皇家赌场》 中说， “你
玩的是你对面的那个人的牌。 ”事实上， 你真正玩的是一个理论上的无限递归。 你知道自己
手里的牌， 并且知道你的对手所拥有的牌， 然后你相信你的对手知道你所拥有的牌， 你相信
你的对手也知道你知道他有的牌……“我不知道这是不是一个真正的博弈论术语， ”世界排名
第一的扑克玩家丹·史密斯说道， “但是扑克玩家称它为‘水平’。 第一级水平是‘我知道’。 第二
级是‘你知道我知道’。 第三级是， ‘我知道你知道我知道’。 有些情况下， 你会说， ‘哇， 这是一
个愚蠢的虚张声势的方法， 但如果他知道这是一个愚蠢的方法， 那他就不会叫我的牌， 那么
这就是一个聪明的虚张声势的方法’。 这些事情经常发生。 ”

在扑克游戏中， 递归是一种危险的游戏。 当然， 你不希望在你的对手后一步被抓住， 但
也有必要不要在他们前面走得太远。 “有一条规则是， 你真的只希望比对手高一个水平， ”扑
克职业选手凡妮莎·鲁索解释说： “如果你水平比对手高太多， 你就会认为他们掌握了实际上
没有掌握的信息， （而且） 他们无法从你的行动中收集到你想要的信息。 ”有时， 扑克专业
人士会故意引诱对手进入一个错综复杂的递归， 同时玩得过于教条。 这被称为引诱他们进
入“一场对抗自己的水平之战”

鉴于递归的危险， 扑克专业人士又是如何从中跳出的呢？ 他们使用博弈论。 “有时候，
你可以想出一些理由来利用游戏， 但很多时候， 你只是在进行低级游戏， 无非只是噪声而
已， ”丹·史密斯解释道， “在大多数情况下， 我真的很努力想要拥有一个基本级的理论进行理
解。 刚开始， 我总是要知道或想知道纳什是什么。 “那么纳什是什么呢？ ”

纳什均衡

然而， 计算机科学把这个故事复杂化了。 广义而言， 数学研究的对象是真理； 计算机科
学研究的对象是复杂性。 正如我们所看到的， 如果一个问题是难以解决的， 那么要找到问题
的解决办法就是不够的。

占优策略， 无论好坏

当涉及人类的交通时， 低调和率会在两方面各有利弊。 好的方面是， 缺乏集中的协调只
会使得你的通勤状况变糟33%。 另一方面， 如果你希望自动驾驶的汽车能为我们带来未来交
通的理想状况， 那么如果你了解到， 现今的自私、 不愿协调的司机其实已经相当接近最佳状
态时， 可能会令你十分沮丧。 的确， 自动驾驶汽车应该减少交通事故的数量， 并且能够使汽
车更紧密地往前行驶， 实现这两方面都能加快交通速度。 但从拥塞的角度来看， 调和率只有
4/3， 而完美的协调意味着完全协调的通勤只能是现在的3/4。 这有点儿像詹姆斯·卡贝尔的名
言： “乐观主义者宣称， 我们生活在有可能是最好的世界里， 而悲观主义者则担心这是真
的。 ”交通拥堵永远是一个问题， 要由规划者和总需求来解决， 而不是由个别司机、 人类或
计算机、 自私或合作的决定来解决。


很容易地以一种纯净的良心结束这种可怕的平衡。 又怎样进行呢？ 看看
你公司的假期政策。 在美国， 人们的工作时间是世界上最长的， 正如《经济学人》 杂志所
言： “工作价值越高， 休闲的价值就越低。nowhere is the value of work higher and the value of leisure lower. ”很少有法律规定雇主所应提供的休假时间， 甚至
美国员工有休假时间， 他们也不用。 最近的一项研究表明， 普通员工只享受了赋予他们的一
半的假期， 而惊人的是， 15%的员工则完全没有假期。
这是公地悲剧在充分发挥作用。 在公司之间和在公司内部一样糟糕。 想象一下在一个小
镇上有两个商店店主。 他们中的每一个人都可以选择每周开放7天， 或者每周只开放6天， 然
后周日休息， 与朋友和家人一起放松一下。 如果他们都休息一天， 他们就会保持现有的市场
份额， 减少压力。 然而， 如果一个店主决定每周开业7天， 他就会吸引更多的顾客， 让顾客
远离竞争对手， 这样就可能威胁对方的生计。 纳什均衡， 再一次让每个人都要一直工作。

机制设计： 改变游戏
艾斯提
不要憎恨玩家， 应憎恨游戏。
《 教父》
永远不要与任何对抗家庭的人站在同一立场上。








